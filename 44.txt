#include<stdio.h>
#include<cstring>
using namespace std;
#define MIN(a,b) a<b?a:b;
int min_of_three(int,int,int);
int* dpQuare(char**,int**,int*,int);
int main() {
    int N;
    scanf("%d",&N);
    char** chess_board = new char*[N];
    int** dp = new int*[N];
    int* num = new int[N+1];
    memset(num,0,sizeof(int)*(N+1));
    for(int i=0;i<N;i++) {
        dp[i] = new int[N];
        memset(dp[i],0,sizeof(int)*N);
        chess_board[i] = new char[N];
        getchar();
        for(int j=0;j<N;j++) {
            chess_board[i][j] = getchar();
        }
    }
    num = dpQuare(chess_board,dp,num,N);
    for(int i=2;i<=N;i++) {
        if(num[i]) {
            printf("%d %d\n",i,num[i]);
        }
    }
    for(int i=0;i<N;i++) {
        delete chess_board[i];
        delete dp[i];
    }
    delete[] dp;
    delete num;
    delete[] chess_board;
    return 0;
}

int min_of_three(int a,int b,int c) {
    a = MIN(a,b);
    a = MIN(a,c);
    return a;
}

int* dpQuare(char** quare,int** dp,int* num,int N) {
    for(int i=0;i<N;i++) {
        dp[N-1][i] = quare[N-1][i] - '0';
        dp[i][N-1] = quare[i][N-1] - '0';
    }
    for(int i=N-2;i>=0;i--) {
        for(int j=N-2;j>=0;j--) {
            if(quare[i][j] - '0') {
               dp[i][j] = min_of_three(dp[i+1][j],dp[i][j+1],dp[i+1][j+1]) + 1;
            }
            for(int z=2;z<=dp[i][j];z++)
                num[z]++;
        }
    }
    return num;
}
